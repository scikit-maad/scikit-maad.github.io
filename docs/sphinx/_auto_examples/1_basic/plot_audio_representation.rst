.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__auto_examples_1_basic_plot_audio_representation.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr__auto_examples_1_basic_plot_audio_representation.py:


Audio representation
====================

An audio signal can be represented in both, temporal and spectral domains. 
These representations are complementary and fundamental to understand the audio
signal characteristics. In this introductory example we will load an audio signal, 
apply basic transformations to better understand its features in time and frequency.

Load an audio file and plot the waveform


.. code-block:: default

    import matplotlib.pyplot as plt
    from maad import sound
    from maad import util

    s, fs = sound.load('../../data/spinetail.wav')
    util.plot_wave(s, fs)




.. image:: /_auto_examples/1_basic/images/sphx_glr_plot_audio_representation_001.png
    :alt: plot audio representation
    :class: sphx-glr-single-img





It can be noticed that in this audio there are four consecutive songs of the spinetail 
*Cranioleuca erythorps*, every song lasting of approximatelly two seconds. 
Let's trim the signal to zoom in on the details of the song.


.. code-block:: default


    s_trim = sound.trim(s, fs, 5, 8)








Onced trimmed, lets compute the envelope of the signal, the Fourier and short-time Fourier transforms.


.. code-block:: default

    env = sound.envelope(s_trim, mode='fast', Nt=128)
    pxx, fidx = sound.spectrum(s, fs, nperseg=1024, method='welch')
    Sxx, tn, fn, ext = sound.spectrogram(s_trim, fs, window='hann', nperseg=1024, noverlap=512)








Finally, we can visualize the signal characteristics in the temporal and 
spectral domains.


.. code-block:: default


    fig, ax = plt.subplots(4,1, figsize=(8,10))
    util.plot_wave(s_trim, fs, ax=ax[0])
    util.plot_wave(env, fs, ax=ax[1])
    util.plot_spectrum(pxx, fidx, ax=ax[2])
    util.plot_spectrogram(Sxx, extent=ext, ax=ax[3], colorbar=False)



.. image:: /_auto_examples/1_basic/images/sphx_glr_plot_audio_representation_002.png
    :alt: plot audio representation
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.549 seconds)


.. _sphx_glr_download__auto_examples_1_basic_plot_audio_representation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_audio_representation.py <plot_audio_representation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_audio_representation.ipynb <plot_audio_representation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
